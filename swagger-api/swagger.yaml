swagger: '2.0'
info:
  description: "These are the endpoints provided by the Central Ledger server of CAPTOR. These endpoints are used by the Inspect and Transport applications. The Inspect application will use the endpoints with inspection tags and the Transport application will use the endpoints with trip tags"
  version: 1.0.0
  title: "Central Ledger"
basePath: "/v1"
tags:
  - name: "trip"
    description: "Everything related with the transportation of a set of goods."
  - name: "inspection"
    description: "Everything related with the inspection of transportation of goods."
schemes:
  - "https"
  - "http"
paths:
  /trip:
    post:
      tags:
        - "trip"
      summary: "Add a new trip"
      description: 'This endpoint is used to report a scheduled transportation of a set of specific goods. It received the information about the transportation.'
      operationId: "addTrip"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Trip object to be added"
          required: true
          schema:
            $ref: '#/definitions/Trip'
      responses:
        '200':
          description: "Trip was created successfully. The associated trip ID is returned"
          schema:
            type: "object"
            additionalProperties: #trip id
              type: "integer"
              format: "int64"
        '405':
          description: "Invalid input"
      security:
        - ledger_auth:
            - 'write:trips'
            - 'read:trips'
  /trip/{tripId}:
    get:
      tags:
        - "trip"
      summary: "Find trip by ID"
      description: "This endpoint is used to return information about a submitted scheduled transportation of a set of specific goods. It receives the ID of the specific trip and returns the trip information."
      operationId: "getTripById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "tripId"
          in: "path"
          description: "ID of trip to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "Trip information is returned"
          schema:
            $ref: '#/definitions/Trip'
        '400':
          description: "Invalid ID supplied"
        '404':
          description: "Trip not found"
      security:
        - ledger_auth:
            - 'read:trips'
    put:
      tags:
        - "trip"
      summary: "Update an existing trip"
      description: 'This endpoint is used to update information about a submitted scheduled transportation of a set of specific goods. It receives the ID of the specific trip and the updated trip information.'
      operationId: "updateTripById"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "tripId"
          in: "path"
          description: "ID of trip to update"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Trip object to be updated"
          required: true
          schema:
            $ref: '#/definitions/Trip'
      responses:
        '200':
          description: "Trip was updated successfully"
        '400':
          description: "Invalid ID supplied"
        '404':
          description: "Trip not found"
        '405':
          description: "Validation exception"
      security:
        - ledger_auth:
            - 'write:trips'
            - 'read:trips'
  /trip/{tripId}/begin:
    post:
      tags:
        - "trip"
      summary: "Initialize trip"
      description: 'This endpoint is used to indicate the initialization of a scheduled transportion of a specific set of goods. It receives the ID of the specific trip and the initial coordinates of the trip.'
      operationId: "initializeTrip"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "tripId"
          in: "path"
          description: "ID of trip to begin"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Initial coordinates"
          required: true
          schema:
            $ref: '#/definitions/Coordinates'
      responses:
        '200':
          description: "Trip was initiated successfully"
        '400':
          description: "Invalid ID supplied"
        '404':
          description: "Trip not found"
        '405':
          description: "Validation exception"
      security:
        - ledger_auth:
            - 'write:trips'
            - 'read:trips'
  /trip/{tripId}/locate:
    post:
      tags:
        - "trip"
      summary: "Update trip location"
      description: 'This endpoint is used to report the current location of the transportation. It receives the ID of the specific trip and the current coordinates of the trip.'
      operationId: "locateTrip"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "tripId"
          in: "path"
          description: "ID of trip to update"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Current coordinates"
          required: true
          schema:
            $ref: '#/definitions/Coordinates'
      responses:
        '200':
          description: "Trip location was updated successfully"
        '400':
          description: "Invalid ID supplied"
        '404':
          description: "Trip not found"
        '405':
          description: "Validation exception"
      security:
        - ledger_auth:
            - 'write:trips'
            - 'read:trips'
    get:
      tags:
        - "trip"
      summary: "Get current trip location"
      description: 'This endpoint is used to retrieve the current location of the transportation. It receives the ID of the specific trip and it returns the current coordinates of the trip.'
      operationId: "getTripLocation"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "tripId"
          in: "path"
          description: "ID of trip to retrive the location"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "Trip location is returned"
          schema:
            $ref: '#/definitions/Coordinates'
        '400':
          description: "Invalid ID supplied"
        '404':
          description: "Trip not found"
      security:
        - ledger_auth:
            - 'read:trips'
  /trip/{tripId}/end:
    post:
      tags:
        - "trip"
      summary: "End trip"
      description: 'This endpoint is used to report the end of the transportation. It receives the ID of the specific trip and the coordinates of the final location of the trip.'
      operationId: "endTrip"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "tripId"
          in: "path"
          description: "ID of trip to end"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Final coordinates"
          required: true
          schema:
            $ref: '#/definitions/Coordinates'
      responses:
        '200':
          description: "Trip was ended successfully"
        '400':
          description: "Invalid ID supplied"
        '404':
          description: "Trip not found"
        '405':
          description: "Validation exception"
      security:
        - ledger_auth:
            - 'write:trips'
            - 'read:trips'
  /trip/{tripId}/inspect:
    get:
      tags:
        - "trip"
      summary: "Check if trip was selected for inspection"
      description: 'This endpoint is used to check if the specific trip was selected for inspection. It received the ID of the trip and returns a boolean indicating if the trip was selected.'
      operationId: "checkTripInspection"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "tripId"
          in: "path"
          description: "ID of trip to end"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "Trip inspection status"
          schema:
            type: "object"
            additionalProperties:
              type: "boolean"
        '400':
          description: "Invalid ID supplied"
      security:
        - ledger_auth:
            - 'read:trips'
  /inspect:
    post:
      tags:
        - "inspection"
      summary: "Add a new checkpoint"
      description: 'This endpoint is used to register a checkpoint. It receives the checkpoint details adn returns the ID of the checkpoint.'
      operationId: "addCheckpoint"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Checkpoint object to be added"
          required: true
          schema:
            $ref: '#/definitions/Checkpoint'
      responses:
        '200':
          description: "Checkpoint was created successfully. The associated checkpoint ID is returned"
          schema:
            type: "object"
            additionalProperties: #checkpoint id
              type: "integer"
              format: "int64"
        '405':
          description: "Invalid input"
      security:
        - ledger_auth:
            - 'write:inspections'
            - 'read:inspections'
  /inspect/{checkpointId}:
    get:
      tags:
        - "inspection"
      summary: "Show information about a checkpoint"
      description: 'This endpoint is used to return the information regarding a specific checkpoint. It receives the ID of the checkpoint and returns the information about the checkpoint.'
      operationId: "showCheckpoint"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "checkpointId"
          in: "path"
          description: "ID of checkpoint"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "Checkpoint information is returned"
          schema:
            $ref: '#/definitions/Checkpoint'
        '400':
          description: "Invalid ID supplied"
      security:
        - ledger_auth:
            - 'read:inspections'
  /inspect/{checkpointId}/select:
    post:
      tags:
        - "inspection"
      summary: "Select a random vehicle for inspection"
      description: 'This endpoint is used to select a trip for inspection. It receives the ID of the checkpoint and returns the ID of the inspection'
      operationId: "selectInspection"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "checkpointId"
          in: "path"
          description: "ID of checkpoint"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "Selection was successful. The ID of the inspection is returned."
          schema:
            type: "object"
            additionalProperties: #inspection id
              type: "integer"
              format: "int64"
        '400':
          description: "Invalid ID supplied"
      security:
        - ledger_auth:
            - 'write:inspections'
            - 'read:inspections'
  /inspect/{checkpointId}/update/{inspectionId}:
    get:
      tags:
        - "inspection"
      summary: "Show a inspection proof"
      description: 'This endpoint is used to show a inspection proof. It receives the ID of the checkpoint and the ID of the inspection and it returns the inspection proof.'
      operationId: "showInspection"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "checkpointId"
          in: "path"
          description: "ID of checkpoint"
          required: true
          type: "integer"
          format: "int64"
        - name: "inspectionId"
          in: "path"
          description: "ID of inspection"
          required: true
          type: "integer"
          format: "int64"
      responses:
        '200':
          description: "Inspection proof is returned"
          schema:
            $ref: '#/definitions/Proof'
        '400':
          description: "Invalid ID supplied"
      security:
        - ledger_auth:
            - 'read:inspections'
    post:
      tags:
        - "inspection"
      summary: "Upload a inspection proof"
      description: 'This endpoint is used to upload a inspection proof. It receives the ID of the checkpoint, the ID of the inspection and the inspection proof'
      operationId: "updateInspection"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "checkpointId"
          in: "path"
          description: "ID of checkpoint"
          required: true
          type: "integer"
          format: "int64"
        - name: "inspectionId"
          in: "path"
          description: "ID of inspection"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Proof object to be added"
          required: true
          schema:
            $ref: '#/definitions/Proof'
      responses:
        '200':
          description: "Proof was uploaded successfully."
          schema:
            type: "string"
        '400':
          description: "Invalid ID supplied"
        '405':
          description: "Invalid input"
      security:
        - ledger_auth:
            - 'write:inspections'
            - 'read:inspections'
        
securityDefinitions:
  ledger_auth:
    type: "oauth2"
    authorizationUrl: 'http://example.com'
    flow: "implicit"
    scopes:
      'write:trips': "modify trips"
      'read:trips': "read your trips"
      'write:inspections': "modify inspections"
      'read:inspections': "read inspections"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Proof:
    type: "object"
    description: "Inspection proof"
    properties:
      vehicleId:
        type: "integer"
        format: "int64"
      hash:
        type: "string"
    xml:
      name: "Proof"
  Coordinates:
    type: "object"
    description: "Deccimal degree GPS coordinates"
    properties:
      latitude:
        type: "integer"
        format: "int64"
      longitude:
        type: "integer"
        format: "int64"
    xml:
      name: "Coordinates"
  FiscalNumber:
    type: "object"
    description: "Fiscal Number to identify a Company"
    properties:
      number:
        type: "integer"
        format: "int32"
    xml:
      name: "FiscalNumber"
  Product:
    type: "object"
    properties:
      name:
        type: "string"
      quantity:
        type: "integer"
        format: "int64"
      weight:
        type: "integer"
        format: "int64"
    xml:
      name: "Product"
  Trip:
    type: "object"
    description: "Object to report a scheduled trip"
    required:
      - "senderNumber"
      - "receiverNumber"
      - "loadingCoordinates"
      - "unloadingCoordinates"
      - "freight"
    properties:
      id:
        type: "integer"
        format: "int64"
      senderNumber:
        $ref: '#/definitions/FiscalNumber'
      receiverNumber:
        $ref: '#/definitions/FiscalNumber'
      loadingCoordinates:
        $ref: '#/definitions/Coordinates'
      unloadingCoordinates:
        $ref: '#/definitions/Coordinates'
      freight:
        type: "array"
        xml:
          name: "product"
          wrapped: true
        items:
          $ref: '#/definitions/Product'
      vehicleLicensePlate:
        type: "string"
      status:
        type: "string"
        description: "Current trip status"
        enum:
          - "scheduled"
          - "on-route"
          - "arrived"
    xml:
      name: "Trip"
  Checkpoint:
    type: "object"
    required:
      - "coordinates"
    properties:
      coordinates:
        $ref: '#/definitions/Coordinates'
    xml:
      name: "Checkpoint"
