/*
 * Central Ledger
 * These are the endpoints provided by the Central Ledger server of CAPTOR. These endpoints are used by the Inspect and Transport applications. The Inspect application will use the endpoints with inspection tags and the Transport application will use the endpoints with trip tags
 *
 * OpenAPI spec version: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.Componentsschemaskey;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;

/**
 * CheckpointInspectorKey
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2019-04-24T14:07:08.201Z[GMT]")public class CheckpointInspectorKey   {
  @JsonProperty("key")
  private Componentsschemaskey key = null;

  public CheckpointInspectorKey key(Componentsschemaskey key) {
    this.key = key;
    return this;
  }

  /**
   * Get key
   * @return key
   **/
  @JsonProperty("key")
  @Schema(description = "")
  public Componentsschemaskey getKey() {
    return key;
  }

  public void setKey(Componentsschemaskey key) {
    this.key = key;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CheckpointInspectorKey checkpointInspectorKey = (CheckpointInspectorKey) o;
    return Objects.equals(this.key, checkpointInspectorKey.key);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CheckpointInspectorKey {\n");
    
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
