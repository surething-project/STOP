/*
 * Central Ledger
 * These are the endpoints provided by the Central Ledger server of CAPTOR. These endpoints are used by the Inspect and Transport applications. The Inspect application will use the endpoints with inspection tags and the Transport application will use the endpoints with trip tags
 *
 * OpenAPI spec version: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.CheckpointInspectorKey;
import io.swagger.model.Coordinates;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;

/**
 * Checkpoint
 */
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2019-04-24T14:07:08.201Z[GMT]")public class Checkpoint   {
  @JsonProperty("coordinates")
  private Coordinates coordinates = null;

  @JsonProperty("checkpointId")
  private Long checkpointId = null;

  @JsonProperty("inspectorKey")
  private CheckpointInspectorKey inspectorKey = null;

  public Checkpoint coordinates(Coordinates coordinates) {
    this.coordinates = coordinates;
    return this;
  }

  /**
   * Get coordinates
   * @return coordinates
   **/
  @JsonProperty("coordinates")
  @Schema(required = true, description = "")
  @NotNull
  public Coordinates getCoordinates() {
    return coordinates;
  }

  public void setCoordinates(Coordinates coordinates) {
    this.coordinates = coordinates;
  }

  public Checkpoint checkpointId(Long checkpointId) {
    this.checkpointId = checkpointId;
    return this;
  }

  /**
   * Get checkpointId
   * @return checkpointId
   **/
  @JsonProperty("checkpointId")
  @Schema(required = true, description = "")
  @NotNull
  public Long getCheckpointId() {
    return checkpointId;
  }

  public void setCheckpointId(Long checkpointId) {
    this.checkpointId = checkpointId;
  }

  public Checkpoint inspectorKey(CheckpointInspectorKey inspectorKey) {
    this.inspectorKey = inspectorKey;
    return this;
  }

  /**
   * Get inspectorKey
   * @return inspectorKey
   **/
  @JsonProperty("inspectorKey")
  @Schema(required = true, description = "")
  @NotNull
  public CheckpointInspectorKey getInspectorKey() {
    return inspectorKey;
  }

  public void setInspectorKey(CheckpointInspectorKey inspectorKey) {
    this.inspectorKey = inspectorKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Checkpoint checkpoint = (Checkpoint) o;
    return Objects.equals(this.coordinates, checkpoint.coordinates) &&
        Objects.equals(this.checkpointId, checkpoint.checkpointId) &&
        Objects.equals(this.inspectorKey, checkpoint.inspectorKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coordinates, checkpointId, inspectorKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Checkpoint {\n");
    
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    checkpointId: ").append(toIndentedString(checkpointId)).append("\n");
    sb.append("    inspectorKey: ").append(toIndentedString(inspectorKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
